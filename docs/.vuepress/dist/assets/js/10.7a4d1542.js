(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{187:function(e,l,n){"use strict";n.r(l);var v=n(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,l=e.$createElement,n=e._self._c||l;return n("div",{staticClass:"content"},[n("p",[e._v('<%@include file="*"%>静态包含')]),e._v(" "),n("p",[e._v("简单的理解就是你可以认为这两个页面的代码写在同一个页面里。")]),e._v(" "),n("p",[e._v('<jsp:include page="*"/>动态包含')]),e._v(" "),n("p",[e._v("当向这个页面发出请求后，会转到include的那个页面去执行。执行完了后又接着执行本页面余下的代码。\n")]),e._v(" "),n("p",[e._v('<%@include file="*"%>指令在编写代码时一般放在最顶部，主要附加的是被重用的代码，这里所说的附加是指把代码原封不动的附加进来，所以在jsp程序中使用这个指令的时候file里面的值（即要倒入的文件）不能带多余的标签或是与当前jsp文件重复的东西。例如：里面不要包含html、body这样的标签，因为是吧源代码原封不动的附加镜来，所以会与当前的jsp中的这样的标签重复导致出错。')]),e._v(" "),n("p",[e._v('而应用<jsp:include page="*"/>标签倒入一个重用文件的时候，这个文件是经过编译的，通俗点说就是附加这个要导入文件经过编译后的效果，所以可以含有与当前jsp程序中重复的内容。')]),e._v(" "),n("p",[e._v("区别：\n"),n("ol",[n("li",[e._v("静态包含在转换成为Java文件的时候将要包含的文件包含进来，作为一个整体编译。动态包含时各个包含文件分别转换，分别编译；")]),e._v(" "),n("li",[e._v("静态包含字啊两个文件中不能有相同的变量，分别编译；")]),e._v(" "),n("li",[e._v("静态包含只能包含文件，动态包含还能包含servlet输出的结果；")]),e._v(" "),n("li",[e._v("动态包含文件发生变化，包含文件会感知变化。")])])])])}],!1,null,null,null);l.default=_.exports}}]);